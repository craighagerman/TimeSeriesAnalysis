d <- read.table(e1afile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
d.struc()
str(d)
str(d)plot(d$index)
plot(d$yearMonth)
x <- c(d$sentiment)   # create a vector from the second column of data
x
hist(x)
x <- c(d$yearMonth)   # create a vector from the second column of data
hist(x)
infile <- "part-00000"
infile <- "Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1_noGeo/part-00000"
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
infile <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1_noGeo/part-00000"
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
v <- c(d2$yearMonth)
hist(v)
v
infile <- "/Users/chagerman/Code/R-practice/chol.txt"
chol <- read.table(url(infile), header = TRUE) #This will pull the dataframe named “chol” into R
chol <- read.table(infile, header = TRUE) #This will pull the dataframe named “chol” into R
chol
hist(AirPassengers)
AirPassengers
hist(chol$AGE)
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
infile <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1/part-00000"
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
a <- c(d2$yearMonth)
b <- c(d2$count)
rep(a, b)
hist(rep(a, b))
rep(d2$yearMonth, b)
hist(rep(d2$yearMonth, b))
hist(Cars93$MPG.city)
data(Cars93, package="MASS")
hist(Cars93$MPG.city)
Cars93$MPG.city
Cars93$MPG
Cars93$MPG.city
Cars93
BMI<-rnorm(n=1000, m=24.2, sd=2.2)
BMI
str(BMI)
hist(BMI)
rep(d2$yearMonth, b)
barplot(prop.table(table(rep(d2$yearMonth, b))))
library(ggplot2)
animals <- rep(d2$yearMonth, b)
ggp <- ggplot(data.frame(animals),aes(x=animals))
ggp + geom_histogram(fill="lightgreen")
ggp + geom_histogram(fill="lightblue",aes(y=..count../sum(..count..)))
)
ggp + geom_histogram(fill="lightblue")
ggp + geom_histogram(fill="lightgreen")
ym <- rep(d2$yearMonth, b)
ggp <- ggplot(data.frame(ym),aes(x=ym))
ggp + geom_histogram(fill="lightpink")
a <- d2$yearMonth
ym <- rep(a, b)
ggp <- ggplot(data.frame(ym),aes(x=ym))
ggp + geom_histogram(fill="lightpurple")
ggp + geom_histogram(fill="blue")
ggp + geom_histogram(fill="lightred")
ggp + geom_histogram(fill="lightpink")
ggp + geom_histogram(fill="darkgoldenrod1")
ggp + ggtitle("Plant growth")
ggp <- ggplot(data.frame(ym),aes(x=ym))
ggp + ggtitle("Plant growth")
ggp + geom_histogram(fill="darkgoldenrod1")
ggp + ggtitle("Plant growth")
ggp
ggp + geom_histogram(fill="darkgoldenrod1")
ggp
ggp <- ggplot(data.frame(ym),aes(x=ym))
ggp + geom_histogram(fill="darkgoldenrod1")
ggp
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + ggtitle("Plant growth")
ggp <- ggplot(data.frame(ym))
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + ggtitle("ISIL EVENT #1")
ggp
ggp <- ggplot(data.frame(ym))
ggp + geom_histogram(fill="darkgoldenrod1")
ggp <- ggplot(data.frame(ym)),aes(x=ym))
ggp <- ggplot(data.frame(ym)),aes(x=ym))
ggp <- ggplot(data.frame(ym), aes(x=ym))
ggp + geom_histogram(fill="lightpink")
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
a <- d2$yearMonth
b <- c(d2$count)
ym <- rep(a, b)
library(ggplot2)
ggp <- ggplot(data.frame(ym), aes(x=ym))
ggp + geom_histogram(fill="lightpink")
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
ggp + geom_histogram(fill="lightpink")ggp <- ggplot(data.frame(ym), aes(x=ym))
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=16))
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp <- ggplot(data.frame(ym), aes(x=year))
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp <- ggplot(data.frame(ym), aes(x=ym))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
yearMonthDay <- rep(a, b)
ggp <- ggplot(data.frame(ym), aes(x=ym))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=16),
axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp <- ggplot(data.frame(ym), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp + theme(axis.title.x = element_text(face="bold", colour="#990000", size=16),
axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
ggp + ggtitle("ISIL EVENT")
f1 <- function(x, y) {
x+y
}
f1
f1(3, 4)
fun <- function(x, y) {
x+y
}
fun(3, 4)
plotter <- function(infile, atitle) {
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
a <- d2$yearMonth
b <- c(d2$count)
yearMonthDay <- rep(a, b)
library(ggplot2)
ggp <- ggplot(data.frame(ym), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill="darkgoldenrod1")
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
#ggp + ggtitle("ISIL EVENT #1")
ggp + ggtitle(atitle)
}
f1a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1/part-00000"
f1b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1_noGeo/part-00000"
f2a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2/part-00000"
f2b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2_noGeo/part-00000"
f3a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3/part-00000"
f3b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3_noGeo/part-00000"
plotter(f1a, "ISIL EVENT #1")
plotter(f1b, "ISIL EVENT #1 (no Geo)")
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
plotter <- function(infile, acolor, atitle) {
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
a <- d2$yearMonth
b <- c(d2$count)
yearMonthDay <- rep(a, b)
library(ggplot2)
ggp <- ggplot(data.frame(ym), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill=acolor)
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
#ggp + ggtitle("ISIL EVENT #1")
ggp + ggtitle(atitle)
}
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
plotter(f1b, "darkgoldenrod1", "ISIL EVENT #1 (no Geo)")
plotter(f2a, "lightpink", "ISIL EVENT #2")
plotter(f2b, "lightpink", "ISIL EVENT #2 (no Geo)")
plotter(f3a, "lightblue", "ISIL EVENT #3")
plotter(f3b, "lightblue", "ISIL EVENT #3 (no Geo)")
plotter(f3b, "lightblue", "ISIL EVENT #3 (no Geo)")
library(ggplot2)
plotter <- function(infile, acolor, atitle) {
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "sentiment", "count"))
a <- d2$yearMonth
b <- c(d2$count)
yearMonthDay <- rep(a, b)
ggp <- ggplot(data.frame(yearMonthDay), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill=acolor)
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
#ggp + ggtitle("ISIL EVENT #1")
ggp + ggtitle(atitle)
}
plotter(f3b, "lightblue", "ISIL EVENT #3 (no Geo)")
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
plotter(f1b, "darkgoldenrod1", "ISIL EVENT #1 (no Geo)")
f1a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1/dateCounts.tsv"
f1b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1_noGeo/dateCounts.tsv"
f2a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2/dateCounts.tsv"
f2b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2_noGeo/dateCounts.tsv"
f3a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3/dateCounts.tsv"
f3b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3_noGeo/dateCounts.tsv"
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
plotter <- function(infile, acolor, atitle) {
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "count"))
a <- d2$yearMonth
b <- c(d2$count)
yearMonthDay <- rep(a, b)
ggp <- ggplot(data.frame(yearMonthDay), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill=acolor)
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
#ggp + ggtitle("ISIL EVENT #1")
ggp + ggtitle(atitle)
}
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
plotter(f1b, "darkgoldenrod1", "ISIL EVENT #1 (no Geo)")
f1a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1/dateCounts.tsv"
f1b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1_noGeo/dateCounts.tsv"
f2a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2/dateCounts.tsv"
f2b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2_noGeo/dateCounts.tsv"
f3a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3/dateCounts.tsv"
f3b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3_noGeo/dateCounts.tsv"
library(ggplot2)
library(ggplot2)
plotter <- function(infile, acolor, atitle) {
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "count"))
a <- d2$yearMonth
b <- c(d2$count)
yearMonthDay <- rep(a, b)
ggp <- ggplot(data.frame(yearMonthDay), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill=acolor)
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
#ggp + ggtitle("ISIL EVENT #1")
ggp + ggtitle(atitle)
}
f1a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1/dateCounts.tsv"
f1b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event1_noGeo/dateCounts.tsv"
f2a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2/dateCounts.tsv"
f2b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event2_noGeo/dateCounts.tsv"
f3a <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3/dateCounts.tsv"
f3b <- "/Users/chagerman/Projects/Data_collection_for_Event_Causality_Analysis/isilEvents/isil-event3_noGeo/dateCounts.tsv"
library(ggplot2)
plotter <- function(infile, acolor, atitle) {
d2 <- read.table(infile, header=F, sep="\t", col.names=c("yearMonth", "count"))
a <- d2$yearMonth
b <- c(d2$count)
yearMonthDay <- rep(a, b)
ggp <- ggplot(data.frame(yearMonthDay), aes(x=yearMonthDay))
#ggp + geom_histogram(fill="lightpink")
ggp <- ggp + geom_histogram(fill=acolor)
ggp <- ggp + theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=10))
#ggp + ggtitle("ISIL EVENT #1")
ggp + ggtitle(atitle)
}
plotter(f1b, "darkgoldenrod1", "ISIL EVENT #1 (no Geo)")
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
plotter(f2a, "lightpink", "ISIL EVENT #2")
plotter(f2b, "lightpink", "ISIL EVENT #2 (no Geo)")
plotter(f3a, "lightblue", "ISIL EVENT #3")
plotter(f3b, "lightblue", "ISIL EVENT #3 (no Geo)")
plotter(f3a, "lightblue", "ISIL EVENT #3")
plotter(f2b, "lightpink", "ISIL EVENT #2 (no Geo)")
plotter(f2a, "lightpink", "ISIL EVENT #2")
plotter(f1b, "darkgoldenrod1", "ISIL EVENT #1 (no Geo)")
plotter(f1a, "darkgoldenrod1", "ISIL EVENT #1")
help(hist)
infile <- "/Users/chagerman/Projects/Sentiment/Bot\ Detection/output_data/avg-tweets-per-day.tsv"
dfrm <- read.table(infile, header=F, sep="\t", col.names=c("name", "sum", "total", "avg"))
hist(dfrm$avg)
library(ggplot2)
ggp <- ggplot(dfrm$avg)
help(aes)
ggp <- ggplot(data.frame(dfrm$avg))
ggp <- ggp + geom_histogram(fill="lightgreen")
ggp + ggtitle("Avg Tweets Per Day")
library(ggplot2)
ggp <- ggplot(data.frame(dfrm$avg), aes(x=dfrm$avg))
ggp <- ggp + geom_histogram(fill="lightgreen")
ggp + ggtitle("Avg Tweets Per Day")
library(ggplot2)
ggp <- ggplot(data.frame(dfrm$avg), aes(x=dfrm$avg))
ggp <- ggp + geom_histogram(fill="lightgreen", binwidth=300)
ggp + ggtitle("Avg Tweets Per Day")
fsize_all = c(22, 42, 218)
fsize = c(22, 42)
btsize = (116, 319)
btsize = c(116, 319)
model <- lm(fsize - btsize)
model <- lm(fsize ~ btsize)
summary(model)
model = lm(formula = fsize ~ btsize, x = TRUE, y=TRUE)
model
plot(fsize, btsize)
abline(model)
model = lm(formula = btsize ~ fsize, x = TRUE, y=TRUE)
model
http://canadianoutages.com/status/vmedia
box <- boxplot( log(DEP_DELAY)~MONTH,data = chicago[chicago$DEP_DELAY > 0,],range=1.5,plot=TRUE,main="Put Title here")
lines(box$stats[3,])
dat<-read.table(text = "188.1 196.0 202.2 216.8 230.5")
dat<-t(dat)
bxp(list(stats=dat, n=rep(10, ncol(dat))))
bxp(list(stats=dat, n=rep(10, ncol(dat))) width=5)
bxp(list(stats=dat, n=rep(10, ncol(dat))), width=5)
bxp(list(stats=dat, n=rep(10, ncol(dat))), width=1)
bxp(list(stats=dat, n=rep(10, ncol(dat))))
bxp(list(stats=dat, n=rep(10, ncol(dat))), width=0.1)
bxp(list(stats=dat, n=rep(10, ncol(dat))), width=10)
bxp(list(stats=dat, n=rep(10, ncol(dat))))
boxplot(count ~ spray, data = InsectSprays, outline = FALSE, boxlty = 0,
whisklty = 0, staplelty = 0)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
rowSums(x)
colSums(x)
K = 20
rep(1, 20)
rep(12,3,4,5)
rowSums(x)
rowSums(x) = rep(7,6,5,4,5,6,7,8)
rowSums(x) == rep(7,6,5,4,5,6,7,8)
rep(7, 6, 5, 4, 5, 6, 7, 8)
dim(UCBAdmissions)
rep(1, K)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
A = matrix(
+   c(2, 4, 3, 1, 5, 7), # the data elements
+   nrow=2,              # number of rows
+   ncol=3,              # number of columns
+   byrow = TRUE)        # fill matrix by rows
A = matrix( c(2, 4, 3, 1, 5, 7), nrow=2, ncol=3, byrow = TRUE)
A
rowSum(A)
rowSums(A)
colSums(A)
A = matrix( c(2, 4, 3, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3, byrow = TRUE)
A
A = matrix( c(0.1, 0.2, 0.7, 1, 5, 7, 1, 2, 3), nrow=3, ncol=3, byrow = TRUE)
rowSums(A)
A = matrix( c(0.1, 0.2, 0.7, .9, 0.05, 0.05, 0.4, 0.5, 0.1), nrow=3, ncol=3, byrow = TRUE)
rowSums(A)
rep(1, 3)
rowSums(A) == rep(1, 3)
K = 4
A = matrix( c(0.1, 0.2, 0.7, .9, 0.05, 0.05, 0.4, 0.5, 0.1, 0.3, 0.7, 0.0), nrow=4, ncol=3, byrow = TRUE)
rep(1, K)
K
rowSums(A) == rep(1, K)
all.equal(rowSums(A), rep(1, K), check.attributes = FALSE)
all.equal(rowSums(A), rep(1, K), check.attributes = TRUE)
A
data(AirPassengers)
describe(data)
data
ap <- data(AirPassengers)
ap
describe(ap)
summarize(ap)
summary(ap)
summary(AirPassengers)
class(AirPassengers)
start(AirPassengers)
end(AirPassengers)
frequency(AirPassengers)
summary(AirPassengers)
plot(ap)
plot(AirPassengers)
abline(reg=lm(AirPassengers~time(AirPassengers)))
cycle(AirPassengers)
plot(aggregate(AirPassengers, FUN=mean))
# plot(aggregate(AirPassengers, FUN=mean))
plot(AirPassengers)
cycle(AirPassengers)
abline(reg=lm(AirPassengers~time(AirPassengers)))
boxplot(AirPassengers~cycle(AirPassengers))
adf.test(diff(log(AirPassengers)), alternative="stationary", k=0)
acf(log(AirPassengers))
acf(diff(log(AirPassengers)))
log(AirPassengers)
diff(log(AirPassengers))
help(diff)
pacf(diff(log(AirPassengers)))
pacf(diff(log(AirPassengers)))
(fit <- arima(log(AirPassengers), c(0, 1, 1),seasonal = list(order = c(0, 1, 1), period = 12)))
(fit <- arima(log(AirPassengers), c(0, 1, 1),seasonal = list(order = c(0, 1, 1), period = 12)))
pred <- predict(fit, n.ahead = 10*12)
ts.plot(AirPassengers,2.718^pred$pred, log = "y", lty = c(1,3))
install.packages("astsa")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/MACDApp")
library(shiny)
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/MACDApp")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/MACDApp")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/MACDApp")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/MACDApp")
?sidebarLayout
?sidebarPanel
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/MACDApp")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
?renderDataTable
?DT::renderDataTable
?DT::renderDataTable
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/Rexploration/timeseries")
cars
?dataTableOutput()
installed.packages("DT")
library(DT)
sessionInfor()
sessionInfo()
if (!require("DT")) install.packages('DT')
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
library(shiny)
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
macd_inter <- function() {
h <-  '<h2>Interpreting MACD</h2>'
interpretation1 <- '<p><b>Crossover</b> - When MACD falls below the signal line it is a bearish signal (sell). When MACD rises
above the signal line it is a bullish signal (buy)'
interpretation2 <- '<p><b>Divergence</b> - When the observation diverges from the MACD it signals the end
of the current trend.</p>'
interpretation3 <- '<p><b>Dramatic Rise</b> - When the MACD rises dramatically (i.e. the shorter MA
pulls away from the longer MA) it signals the security is overbought and will soon return to normal levels</p>'
interpretation4 <- '<p><b>Zero line movement</b> - When the MACD is above zero the short term average is above
the long term average, signalling upward momentum. (and vice versa) </p>'
return ( paste(h, interpretation1, interpretation2, interpretation3, interpretation4) )
}
macd_inter
print(macd_inter)
macd_inter <- '<h2>Interpreting MACD</h2>
<p><b>Crossover</b> - When MACD falls below the signal line it is a bearish signal (sell). When MACD rises
above the signal line it is a bullish signal (buy)
<p><b>Divergence</b> - When the observation diverges from the MACD it signals the end
of the current trend.</p>
<p><b>Dramatic Rise</b> - When the MACD rises dramatically (i.e. the shorter MA
pulls away from the longer MA) it signals the security is overbought and will soon return to normal levels</p>
<p><b>Zero line movement</b> - When the MACD is above zero the short term average is above
the long term average, signalling upward momentum. (and vice versa) </p>'
print(macd_inter)
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
shiny::runApp('Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis')
library(shiny)
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
plot.ts(trumpdata$netPct)
SMA(ts(trumpdata$netPct))
plot(SMA(ts(trumpdata$netPct)))
?SMA
plot(ts(trumpdata$netPct), col="grey")
addSMA(ts(trumpdata$netPct))
addSMA(ts(trumpdata$netPct), n=7)
addSMA(trumpdata$netPct, n=7)
SMA(trumpdata$netPct, n=7)
plot(SMA(trumpdata$netPct, n=7))
addSMA(trumpdata$netPct, n=7)
plot(ts(trumpdata$netPct), col="grey")
addSMA()
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
?dySeries
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
n1=7
paste("n", n1)
?paste
paste("n", n1, sep="")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
?sidebarPanel
?checkboxInput
?checkboxInput
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
runApp("/Users/chagerman/Projects/TimeSeriesAnalysis/src/R/TimeSeriesAnalysis")
